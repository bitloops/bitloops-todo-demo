// @generated by protobuf-ts 2.1.0
// @generated from protobuf file "todoApp.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { TodoApp } from "./todoApp";
import type { UpdateResponse } from "./todoApp";
import type { UpdateRequest } from "./todoApp";
import type { GetAllResponse } from "./todoApp";
import type { GetAllRequest } from "./todoApp";
import type { DeleteResponse } from "./todoApp";
import type { DeleteRequest } from "./todoApp";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CreateResponse } from "./todoApp";
import type { CreateRequest } from "./todoApp";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service TodoApp
 */
export interface ITodoAppClient {
    /**
     * @generated from protobuf rpc: Create(CreateRequest) returns (CreateResponse);
     */
    create(input: CreateRequest, options?: RpcOptions): UnaryCall<CreateRequest, CreateResponse>;
    /**
     * @generated from protobuf rpc: Delete(DeleteRequest) returns (DeleteResponse);
     */
    delete(input: DeleteRequest, options?: RpcOptions): UnaryCall<DeleteRequest, DeleteResponse>;
    /**
     * @generated from protobuf rpc: GetAll(GetAllRequest) returns (GetAllResponse);
     */
    getAll(input: GetAllRequest, options?: RpcOptions): UnaryCall<GetAllRequest, GetAllResponse>;
    /**
     * @generated from protobuf rpc: Update(UpdateRequest) returns (UpdateResponse);
     */
    update(input: UpdateRequest, options?: RpcOptions): UnaryCall<UpdateRequest, UpdateResponse>;
}
/**
 * @generated from protobuf service TodoApp
 */
export class TodoAppClient implements ITodoAppClient, ServiceInfo {
    typeName = TodoApp.typeName;
    methods = TodoApp.methods;
    options = TodoApp.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Create(CreateRequest) returns (CreateResponse);
     */
    create(input: CreateRequest, options?: RpcOptions): UnaryCall<CreateRequest, CreateResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateRequest, CreateResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Delete(DeleteRequest) returns (DeleteResponse);
     */
    delete(input: DeleteRequest, options?: RpcOptions): UnaryCall<DeleteRequest, DeleteResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteRequest, DeleteResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetAll(GetAllRequest) returns (GetAllResponse);
     */
    getAll(input: GetAllRequest, options?: RpcOptions): UnaryCall<GetAllRequest, GetAllResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetAllRequest, GetAllResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Update(UpdateRequest) returns (UpdateResponse);
     */
    update(input: UpdateRequest, options?: RpcOptions): UnaryCall<UpdateRequest, UpdateResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateRequest, UpdateResponse>("unary", this._transport, method, opt, input);
    }
}
